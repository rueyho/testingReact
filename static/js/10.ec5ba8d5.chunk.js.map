{"version":3,"sources":["pages/_component/button/c.customButton.js","pages/_component/loading/c.loading.js","../node_modules/@material-ui/core/esm/Link/Link.js","pages/onBoarding/c.onBoarding.js"],"names":["BootstrapButton","withStyles","root","boxShadow","textTransform","fontSize","padding","border","lineHeight","color","borderColor","fontFamily","join","backgroundColor","Button","ComponentCustomButton","props","state","this","onClose","onClick","label","style","marginRight","variant","disableRipple","ComponentAbstract","propTypes","visible","PropTypes","bool","title","string","func","defaultProps","ComponentCustomLoading","console","log","classes","open","className","paper","size","theme","position","top","left","transform","borderRadius","outline","Link","React","forwardRef","ref","_props$color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","useState","focusVisible","setFocusVisible","handlerRef","useForkRef","createElement","Typography","_extends","clsx","concat","capitalize","button","event","underlineNone","textDecoration","underlineHover","underlineAlways","WebkitTapHighlightColor","margin","cursor","userSelect","verticalAlign","borderStyle","name","useStyles","flexGrow","wrapper","width","palette","text","secondary","rowField","spacing","flexBasis","textField","header","borderBottom","fontWeight","body","tableContainer","maxHeight","tableHeader","borderTop","minWidth","reduxConnect","connect","ownProps","thisState","stateObj","i","length","recordItem","ReduxEnumOnBoarding","INIT_DONE","SEARCH_DONE","ERROR","ComponentOnBoarding","uuid","isLoading","isSubmit","isError","errorTitle","errorMsg","errorCode","form","data","result","rowsPerPage","page","requestSearch","setState","uploadedStartDate","cifNum","verifiedStartDate","uploadedBy","companyName","HelperNavigate","route","mapPath","HelperNavigateENUM","BANK_DETAIL","HelperVerifyAuthorize","verify","then","Promise","all","HelperStorage","get","ENUM","SESSION","KEY","AUTHORIZATION_TOKEN_TYPE","AUTHORIZATION_ACCESS_TOKEN","value","dispatch","ReduxActionOnBoarding","rSearch","authorizeType","authorizeToken","catch","error","requestError","bankusers","ElementNum","totalElement","rRequestEnd","e","target","id","container","item","xs","alignItems","direction","justify","onChange","onChangeField","verifiedBy","uploadedBranch","Package","textAlign","marginTop","onClickReset","onClickSearch","onClickAddNew","stickyHeader","aria-label","align","slice","map","hover","verifiedstartdate","tabIndex","username","persona","companyNameCode","companyNameName","creationDate","href","ONBOARDING_DETAIL","rowsPerPageOptions","colSpan","count","SelectProps","inputProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt"],"mappings":"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","file":"static/js/10.ec5ba8d5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport ComponentAbstract from \"../../_abstract/c.abstract\";\r\n\r\nconst BootstrapButton = withStyles({\r\n  root: {\r\n    boxShadow: \"none\",\r\n    textTransform: \"none\",\r\n    fontSize: 16,\r\n    padding: \"6px 12px\",\r\n    border: \"1px solid\",\r\n    lineHeight: 1.5,\r\n    color: \"white\", //label\r\n    borderColor: \"#ffffff\",\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\"),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#0069d9\",\r\n      borderColor: \"#0062cc\",\r\n      boxShadow: \"none\"\r\n    },\r\n    \"&:active\": {\r\n      boxShadow: \"none\",\r\n      backgroundColor: \"#0062cc\",\r\n      borderColor: \"#005cbf\"\r\n    },\r\n    \"&:focus\": {\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.5)\"\r\n    }\r\n  }\r\n})(Button);\r\n\r\nexport default class ComponentCustomButton extends ComponentAbstract {\r\n  static propTypes = {\r\n    visible: PropTypes.bool,\r\n\r\n    title: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n    onClick: PropTypes.func\r\n  };\r\n\r\n  static defaultProps = {\r\n    visible: false,\r\n\r\n    title: \"\",\r\n    onClose: () => {},\r\n    onClick: () => {}\r\n  };\r\n\r\n  /*\r\n        ################################################################################################################################################\r\n        ################################################################################################################################################\r\n                constructor\r\n        ################################################################################################################################################\r\n        ################################################################################################################################################\r\n    */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  /*\r\n\t\t################################################################################################################################################\r\n\t\t################################################################################################################################################\r\n\t\t\t\tevent\r\n\t\t################################################################################################################################################\r\n\t\t################################################################################################################################################\r\n\t*/\r\n  onClose() {\r\n    this.props.onClose();\r\n  }\r\n\r\n  /*\r\n\t\t################################################################################################################################################\r\n\t\t################################################################################################################################################\r\n\t\t\t\trender\r\n\t\t################################################################################################################################################\r\n\t\t################################################################################################################################################\r\n\t*/\r\n  render() {\r\n    const {\r\n      props: { onClick, label }\r\n    } = this;\r\n    // console.log(\"aasd\", this.props);\r\n    return (\r\n      <BootstrapButton\r\n        style={{\r\n          backgroundColor: this.props.backgroundColor,\r\n          marginRight: \"10px\"\r\n        }}\r\n        onClick={onClick}\r\n        variant=\"contained\"\r\n        // color=\"primary\"\r\n        disableRipple\r\n      >\r\n        {label}\r\n      </BootstrapButton>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/* ################################################## */\r\n/*          UI Framework                              */\r\n/* ################################################## */\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\n/* ################################################## */\r\n/*          Page                                      */\r\n/* ################################################## */\r\nimport ComponentAbstract from \"../../_abstract/c.abstract\";\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    // backgroundColor: theme.palette.background.paper,\r\n    // boxShadow: theme.shadows[5],\r\n    padding: 15,\r\n    borderRadius: \"50%\",\r\n    outline: \"none\"\r\n  }\r\n});\r\n\r\nclass ComponentCustomLoading extends ComponentAbstract {\r\n  static propTypes = {\r\n    visible: PropTypes.bool,\r\n    onClose: PropTypes.func\r\n  };\r\n  static defaultProps = {\r\n    visible: false,\r\n    onClose: () => {}\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"ComponentCustomLoading : constructor : *** \");\r\n  }\r\n\r\n  /* #################### Render #################### */\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      // Material UI v3 Modal\r\n      <Modal open={this.props.visible} onClose={() => {}}>\r\n        <div className={classes.paper}>\r\n          <CircularProgress size={50} color=\"primary\" />\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ComponentCustomLoading);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { useIsFocusVisible } from '../utils/focusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, {\n      button: classes.button\n    }[component]),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['default', 'error', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/* ################################################### */\r\n/*          UI Framework         */\r\n/* ################################################### */\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport ComponentCustomButton from \"../_component/button/c.customButton\";\r\nimport ComponentCustomLoading from \"../_component/loading/c.loading\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport Link from \"@material-ui/core/Link\";\r\n/* ################################################### */\r\n/*          redux         */\r\n/* ################################################### */\r\n\r\n/* ################################################### */\r\n/*          constant         */\r\n/* ################################################### */\r\n// import { AppConstant } from '../../_constant/constant.app';\r\n\r\n/* ################################################### */\r\n/*          page         */\r\n/* ################################################### */\r\n\r\nimport ComponentAbstract from \"../_abstract/c.abstract\";\r\nimport HelperNavigate, { HelperNavigateENUM } from \"../_helper/h.navigate\";\r\nimport HelperStorage from \"../_helper/h.storage\";\r\nimport HelperVerifyAuthorize from \"../_helper/h.verifyAuthorize\";\r\nimport ReduxActionOnBoarding, {\r\n  ReduxEnumOnBoarding\r\n} from \"../../_redux/action/reduxAction.onBoarding\";\r\n/* ################################################### */\r\n/* \t\t util\t\t */\r\n/* ################################################### */\r\n\r\n/* ################################################### */\r\n/*          style         */\r\n/* ################################################### */\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = withStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  wrapper: {\r\n    padding: 15\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    // padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary\r\n    // webkitBoxShadow: \"-1px 4px 12px -1px rgba(147,156,147,1)\",\r\n    // mozBoxShadow: \" -1px 4px 12px -1px rgba(147,156,147,1)\",\r\n    // boxShadow: \"-1px 4px 12px -1px rgba(147,156,147,1)\"\r\n  },\r\n  rowField: {\r\n    padding: theme.spacing(1)\r\n  },\r\n  label: {\r\n    flexBasis: \"20%\"\r\n  },\r\n  textField: {\r\n    flexBasis: \"25%\",\r\n    marginRight: 40\r\n  },\r\n  header: {\r\n    padding: \"15px\",\r\n    borderBottom: \"1px solid #eee\",\r\n    fontWeight: 500,\r\n    fontSize: 20\r\n  },\r\n  body: {\r\n    padding: \"15px\"\r\n  },\r\n  //Table\r\n  tableContainer: {\r\n    maxHeight: 440\r\n  },\r\n  tableHeader: {\r\n    borderTop: \"1px solid rgb(250,250,250) !important\",\r\n    fontWeight: \"bold\",\r\n    minWidth: 170\r\n  }\r\n}));\r\n\r\nconst reduxConnect = connect((state, ownProps) => {\r\n  let thisState = state[\"ReduxOnBoarding\"];\r\n  let stateObj = {};\r\n\r\n  if (thisState) {\r\n    for (let i = 0; i < thisState.length; i++) {\r\n      let recordItem = thisState[i];\r\n      if (!recordItem[\"completed\"]) {\r\n        if (ReduxEnumOnBoarding.INIT_DONE === recordItem[\"type\"]) {\r\n          stateObj[\"onReadyFunction\"] = \"requestInitDone\";\r\n          stateObj[\"_result_\"] = recordItem[\"_result_\"];\r\n        } else if (ReduxEnumOnBoarding.SEARCH_DONE === recordItem[\"type\"]) {\r\n          stateObj[\"onReadyFunction\"] = \"requestSearchDone\";\r\n          stateObj[\"_result_\"] = recordItem[\"_result_\"];\r\n        } else if (ReduxEnumOnBoarding.ERROR === recordItem[\"type\"]) {\r\n          stateObj[\"onReadyFunction\"] = \"requestError\";\r\n          stateObj[\"_result_\"] = recordItem[\"_result_\"];\r\n        }\r\n        recordItem[\"completed\"] = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return stateObj;\r\n});\r\n\r\nclass ComponentOnBoarding extends ComponentAbstract {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(\r\n      \"ComponentOnBoarding : constructor : *** : [\" + this.uuid() + \"] \",\r\n      props\r\n    );\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      isSubmit: false,\r\n      isError: false,\r\n      errorTitle: \"\",\r\n      errorMsg: \"\",\r\n      errorCode: \"\",\r\n      form: {},\r\n      data: {},\r\n      result: [],\r\n      rowsPerPage: 5,\r\n      page: 0\r\n    };\r\n  }\r\n\r\n  /*\r\n                ################################################################################################################################################\r\n                ################################################################################################################################################\r\n                        listener\r\n                ################################################################################################################################################\r\n                ################################################################################################################################################\r\n            */\r\n  _onReady() {\r\n    this.requestSearch();\r\n  }\r\n\r\n  onClickReset() {\r\n    console.log(\"ComponentOnBoarding onClickReset\");\r\n    // let form = this.state.form;\r\n    // form[\"cifNum\"] = \"\";\r\n\r\n    this.setState(\r\n      {\r\n        // form\r\n        form: {\r\n          ...this.state.form,\r\n          uploadedStartDate: \"\",\r\n          cifNum: \"\",\r\n          verifiedStartDate: \"\",\r\n          uploadedBy: \"\",\r\n          companyName: \"\"\r\n        }\r\n      },\r\n      () => {\r\n        console.log(\"aaaaaa\", this.state.form);\r\n      }\r\n    );\r\n  }\r\n\r\n  onClickSearch() {\r\n    console.log(\"ComponentOnBoarding onClickSearchx\");\r\n    this.requestSearch();\r\n  }\r\n  onClickAddNew() {\r\n    console.log(\"ComponentOnBoarding onClickAddNew\");\r\n    HelperNavigate.route(\r\n      HelperNavigate.mapPath(HelperNavigateENUM.BANK_DETAIL)\r\n    );\r\n  }\r\n\r\n  requestSearch() {\r\n    console.log(\"ComponentOnBoarding requestSearch\");\r\n\r\n    this.setState({ isLoading: true }, () => {\r\n      HelperVerifyAuthorize.verify()\r\n        .then(() => {\r\n          Promise.all([\r\n            new HelperStorage().get(\r\n              HelperStorage.ENUM.SESSION,\r\n              HelperStorage.KEY.AUTHORIZATION_TOKEN_TYPE\r\n            ),\r\n            new HelperStorage().get(\r\n              HelperStorage.ENUM.SESSION,\r\n              HelperStorage.KEY.AUTHORIZATION_ACCESS_TOKEN\r\n            )\r\n          ]).then(value => {\r\n            this.dispatch(\r\n              ReduxActionOnBoarding.rSearch(\r\n                { authorizeType: value[0], authorizeToken: value[1] },\r\n                {}\r\n              )\r\n            );\r\n          });\r\n        })\r\n        .catch(error => {\r\n          this.requestError(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  requestSearchDone(result) {\r\n    console.log(\r\n      \"ComponentOnBoarding : requestSearchDone : ***  : result => \",\r\n      result\r\n    );\r\n\r\n    this.setState({\r\n      isLoading: false,\r\n      result: result.bankusers,\r\n      ElementNum: result.totalElement\r\n    });\r\n\r\n    this.dispatch(ReduxActionOnBoarding.rRequestEnd());\r\n  }\r\n\r\n  /*\r\n                ################################################################################################################################################\r\n                ################################################################################################################################################\r\n                        event\r\n                ################################################################################################################################################\r\n                ################################################################################################################################################\r\n            */\r\n  onChangeField(e) {\r\n    console.log(\"onChangeField\", e.target.value);\r\n    let form = this.state.form;\r\n    form[e.target.id] = e.target.value;\r\n    this.setState({ form: form });\r\n  }\r\n\r\n  /*\r\n                ################################################################################################################################################\r\n                ################################################################################################################################################\r\n                        Request\r\n                ################################################################################################################################################\r\n                ################################################################################################################################################\r\n            */\r\n\r\n  /*\r\n                ################################################################################################################################################\r\n                ################################################################################################################################################\r\n                        Util\r\n                ################################################################################################################################################\r\n                ################################################################################################################################################\r\n            */\r\n\r\n  /*\r\n                ################################################################################################################################################\r\n                ################################################################################################################################################\r\n                        render\r\n                ################################################################################################################################################\r\n                ################################################################################################################################################\r\n            */\r\n\r\n  render() {\r\n    const {\r\n      props: { classes },\r\n      state: { form, rowsPerPage, page, result }\r\n    } = this;\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n      console.log(\"handleChangePage\", newPage + event);\r\n      this.setState({\r\n        page: newPage\r\n      });\r\n    };\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n      console.log(\"handleChangeRowsPerPage\", event);\r\n      this.setState({\r\n        rowsPerPage: parseInt(event.target.value, 10),\r\n        page: 0\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container className={classes.wrapper}>\r\n          <ComponentCustomLoading visible={this.state.isLoading} />\r\n          <Paper className={classes.paper}>\r\n            <div className={classes.header}>onBoarding</div>\r\n            <div style={{ padding: 15 }}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                alignItems=\"baseline\"\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                className={classes.rowField}\r\n              >\r\n                <div className={classes.label}>CIF Number</div>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  id=\"cifNum\"\r\n                  value={form.cifNum}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={e => {\r\n                    this.onChangeField(e);\r\n                  }}\r\n                />\r\n\r\n                <div className={classes.label}>Company Name</div>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  id=\"companyName\"\r\n                  value={form.companyName}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={e => {\r\n                    this.onChangeField(e);\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                alignItems=\"baseline\"\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                className={classes.rowField}\r\n              >\r\n                <div className={classes.label}>Uploaded Date/Time</div>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  id=\"uploadedStartDate\"\r\n                  value={form.uploadedStartDate}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={e => {\r\n                    this.onChangeField(e);\r\n                  }}\r\n                />\r\n\r\n                <div className={classes.label}>uploadedBy</div>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  id=\"uploadedBy\"\r\n                  value={form.uploadedBy}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={e => {\r\n                    this.onChangeField(e);\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                alignItems=\"baseline\"\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                className={classes.rowField}\r\n              >\r\n                <div className={classes.label}>verifiedStartDate</div>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  id=\"verifiedStartDate\"\r\n                  value={form.verifiedStartDate}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={e => {\r\n                    this.onChangeField(e);\r\n                  }}\r\n                />\r\n\r\n                <div className={classes.label}>verified By</div>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  id=\"verifiedBy\"\r\n                  value={form.verifiedBy}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={e => {\r\n                    this.onChangeField(e);\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                alignItems=\"baseline\"\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                className={classes.rowField}\r\n              >\r\n                <div className={classes.label}>Uploaded Branch</div>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  id=\"uploadedBranch\"\r\n                  value={form.uploadedBranch}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={e => {\r\n                    this.onChangeField(e);\r\n                  }}\r\n                />\r\n\r\n                <div className={classes.label}>Service Package</div>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  id=\"Package\"\r\n                  value={form.Package}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={e => {\r\n                    this.onChangeField(e);\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <div style={{ textAlign: \"center\", marginTop: \"15px\" }}>\r\n                <ComponentCustomButton\r\n                  onClick={() => {\r\n                    this.onClickReset();\r\n                  }}\r\n                  backgroundColor={\"#6a8669d9\"}\r\n                  label={\"Reset\"}\r\n                ></ComponentCustomButton>\r\n                <ComponentCustomButton\r\n                  onClick={() => {\r\n                    this.onClickSearch();\r\n                  }}\r\n                  backgroundColor={\"#12a20cd9\"}\r\n                  label={\"Search\"}\r\n                ></ComponentCustomButton>\r\n                <ComponentCustomButton\r\n                  onClick={() => {\r\n                    this.onClickAddNew();\r\n                  }}\r\n                  backgroundColor={\"red\"}\r\n                  label={\"Add\"}\r\n                ></ComponentCustomButton>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* //Table #########################################// */}\r\n        <Grid container className={classes.wrapper}>\r\n          <Paper className={classes.paper}>\r\n            <TableContainer className={classes.container}>\r\n              <div style={{ padding: 10 }}>Search Result</div>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      // key={column.id}\r\n                      align={\"right\"}\r\n                      className={classes.tableHeader}\r\n                    >\r\n                      User ID\r\n                    </TableCell>\r\n                    <TableCell\r\n                      // key={column.id}\r\n                      align={\"right\"}\r\n                      className={classes.tableHeader}\r\n                    >\r\n                      User Name\r\n                    </TableCell>\r\n                    <TableCell\r\n                      // key={column.id}\r\n                      align={\"right\"}\r\n                      className={classes.tableHeader}\r\n                    >\r\n                      uploadedBy\r\n                    </TableCell>\r\n                    <TableCell\r\n                      // key={column.id}\r\n                      align={\"right\"}\r\n                      className={classes.tableHeader}\r\n                    >\r\n                      verifiedStartDate\r\n                    </TableCell>\r\n                    <TableCell\r\n                      // key={column.id}\r\n                      align={\"right\"}\r\n                      className={classes.tableHeader}\r\n                    >\r\n                      companyName\r\n                    </TableCell>\r\n                    <TableCell\r\n                      // key={column.id}\r\n                      align={\"right\"}\r\n                      className={classes.tableHeader}\r\n                    >\r\n                      Created Date/Time\r\n                    </TableCell>\r\n                    <TableCell\r\n                      // key={column.id}\r\n                      align={\"right\"}\r\n                      className={classes.tableHeader}\r\n                    >\r\n                      Action\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {result\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map(item => {\r\n                      return (\r\n                        //key={row.code} better don't set ,code must unique , if not will get error pages\r\n                        <TableRow\r\n                          hover\r\n                          verifiedstartdate=\"checkbox\"\r\n                          tabIndex={-1}\r\n                        >\r\n                          <TableCell align={\"right\"}>{item.username}</TableCell>\r\n                          <TableCell align={\"right\"}>{item.name}</TableCell>\r\n                          <TableCell align={\"right\"}>\r\n                            {item.uploadedBy}\r\n                          </TableCell>\r\n                          <TableCell align={\"right\"}>{item.persona}</TableCell>\r\n                          <TableCell\r\n                            align={\"right\"}\r\n                          >{`${item.companyNameCode}-${item.companyNameName}`}</TableCell>\r\n                          <TableCell align={\"right\"}>\r\n                            {item.creationDate}\r\n                          </TableCell>\r\n                          <TableCell align={\"right\"}>\r\n                            <Link\r\n                              href=\"#\"\r\n                              onClick={() => {\r\n                                HelperNavigate.route(\r\n                                  HelperNavigate.mapPath(\r\n                                    HelperNavigateENUM.ONBOARDING_DETAIL\r\n                                  )\r\n                                );\r\n                              }}\r\n                            >\r\n                              ONBOARD\r\n                            </Link>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n                <TableFooter>\r\n                  <TableRow>\r\n                    <TablePagination\r\n                      // rowsPerPageOptions={[]}   // prevent display dropdown option\r\n                      rowsPerPageOptions={[\r\n                        5,\r\n                        10,\r\n                        25,\r\n                        { label: \"All\", value: -1 }\r\n                      ]}\r\n                      colSpan={6}\r\n                      count={result.length}\r\n                      rowsPerPage={rowsPerPage}\r\n                      page={page}\r\n                      // labelRowsPerPage=\"\" //prevent display rows per page text\r\n                      SelectProps={{\r\n                        inputProps: { \"aria-label\": \"rows per page\" },\r\n                        native: true\r\n                      }}\r\n                      onChangePage={handleChangePage}\r\n                      onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                      // ActionsComponent={TablePaginationActions}\r\n                    />\r\n                  </TableRow>\r\n                </TableFooter>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default reduxConnect(useStyles(ComponentOnBoarding));\r\n"],"sourceRoot":""}